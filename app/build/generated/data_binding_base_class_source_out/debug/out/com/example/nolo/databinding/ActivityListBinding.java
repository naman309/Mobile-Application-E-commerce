// Generated by view binder compiler. Do not edit!
package com.example.nolo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nolo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityListBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout androidBtn;

  @NonNull
  public final ImageView androidImage;

  @NonNull
  public final TextView androidSelect;

  @NonNull
  public final LinearLayout appleBtn;

  @NonNull
  public final ImageView appleImage;

  @NonNull
  public final TextView appleSelect;

  @NonNull
  public final RelativeLayout backBtn;

  @NonNull
  public final ImageButton backBtnImg;

  @NonNull
  public final ImageView categoryHeader;

  @NonNull
  public final ListView categoryItemParentList;

  @NonNull
  public final LinearLayout phoneToggle;

  private ActivityListBinding(@NonNull ScrollView rootView, @NonNull LinearLayout androidBtn,
      @NonNull ImageView androidImage, @NonNull TextView androidSelect,
      @NonNull LinearLayout appleBtn, @NonNull ImageView appleImage, @NonNull TextView appleSelect,
      @NonNull RelativeLayout backBtn, @NonNull ImageButton backBtnImg,
      @NonNull ImageView categoryHeader, @NonNull ListView categoryItemParentList,
      @NonNull LinearLayout phoneToggle) {
    this.rootView = rootView;
    this.androidBtn = androidBtn;
    this.androidImage = androidImage;
    this.androidSelect = androidSelect;
    this.appleBtn = appleBtn;
    this.appleImage = appleImage;
    this.appleSelect = appleSelect;
    this.backBtn = backBtn;
    this.backBtnImg = backBtnImg;
    this.categoryHeader = categoryHeader;
    this.categoryItemParentList = categoryItemParentList;
    this.phoneToggle = phoneToggle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.android_btn;
      LinearLayout androidBtn = ViewBindings.findChildViewById(rootView, id);
      if (androidBtn == null) {
        break missingId;
      }

      id = R.id.android_image;
      ImageView androidImage = ViewBindings.findChildViewById(rootView, id);
      if (androidImage == null) {
        break missingId;
      }

      id = R.id.android_select;
      TextView androidSelect = ViewBindings.findChildViewById(rootView, id);
      if (androidSelect == null) {
        break missingId;
      }

      id = R.id.apple_btn;
      LinearLayout appleBtn = ViewBindings.findChildViewById(rootView, id);
      if (appleBtn == null) {
        break missingId;
      }

      id = R.id.apple_image;
      ImageView appleImage = ViewBindings.findChildViewById(rootView, id);
      if (appleImage == null) {
        break missingId;
      }

      id = R.id.apple_select;
      TextView appleSelect = ViewBindings.findChildViewById(rootView, id);
      if (appleSelect == null) {
        break missingId;
      }

      id = R.id.back_btn;
      RelativeLayout backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.back_btn_img;
      ImageButton backBtnImg = ViewBindings.findChildViewById(rootView, id);
      if (backBtnImg == null) {
        break missingId;
      }

      id = R.id.category_header;
      ImageView categoryHeader = ViewBindings.findChildViewById(rootView, id);
      if (categoryHeader == null) {
        break missingId;
      }

      id = R.id.category_item_parent_list;
      ListView categoryItemParentList = ViewBindings.findChildViewById(rootView, id);
      if (categoryItemParentList == null) {
        break missingId;
      }

      id = R.id.phone_toggle;
      LinearLayout phoneToggle = ViewBindings.findChildViewById(rootView, id);
      if (phoneToggle == null) {
        break missingId;
      }

      return new ActivityListBinding((ScrollView) rootView, androidBtn, androidImage, androidSelect,
          appleBtn, appleImage, appleSelect, backBtn, backBtnImg, categoryHeader,
          categoryItemParentList, phoneToggle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
