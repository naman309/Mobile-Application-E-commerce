// Generated by view binder compiler. Do not edit!
package com.example.nolo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nolo.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListVariantBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout binBtn;

  @NonNull
  public final MaterialCardView colourCircle;

  @NonNull
  public final TextView colourLabel;

  @NonNull
  public final RelativeLayout decrementBtn;

  @NonNull
  public final RelativeLayout heartBtn;

  @NonNull
  public final ImageView heartIcon;

  @NonNull
  public final RelativeLayout incrementBtn;

  @NonNull
  public final LinearLayout itemClickable;

  @NonNull
  public final ImageView itemImg;

  @NonNull
  public final TextView price;

  @NonNull
  public final LinearLayout quantityControl;

  @NonNull
  public final TextView quantityLabel;

  @NonNull
  public final TextView quantityText;

  @NonNull
  public final MaterialCardView ramTag;

  @NonNull
  public final TextView ramText;

  @NonNull
  public final MaterialCardView ssdTag;

  @NonNull
  public final TextView ssdText;

  @NonNull
  public final TextView title;

  private ItemListVariantBinding(@NonNull LinearLayout rootView, @NonNull RelativeLayout binBtn,
      @NonNull MaterialCardView colourCircle, @NonNull TextView colourLabel,
      @NonNull RelativeLayout decrementBtn, @NonNull RelativeLayout heartBtn,
      @NonNull ImageView heartIcon, @NonNull RelativeLayout incrementBtn,
      @NonNull LinearLayout itemClickable, @NonNull ImageView itemImg, @NonNull TextView price,
      @NonNull LinearLayout quantityControl, @NonNull TextView quantityLabel,
      @NonNull TextView quantityText, @NonNull MaterialCardView ramTag, @NonNull TextView ramText,
      @NonNull MaterialCardView ssdTag, @NonNull TextView ssdText, @NonNull TextView title) {
    this.rootView = rootView;
    this.binBtn = binBtn;
    this.colourCircle = colourCircle;
    this.colourLabel = colourLabel;
    this.decrementBtn = decrementBtn;
    this.heartBtn = heartBtn;
    this.heartIcon = heartIcon;
    this.incrementBtn = incrementBtn;
    this.itemClickable = itemClickable;
    this.itemImg = itemImg;
    this.price = price;
    this.quantityControl = quantityControl;
    this.quantityLabel = quantityLabel;
    this.quantityText = quantityText;
    this.ramTag = ramTag;
    this.ramText = ramText;
    this.ssdTag = ssdTag;
    this.ssdText = ssdText;
    this.title = title;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListVariantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListVariantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list_variant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListVariantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bin_btn;
      RelativeLayout binBtn = ViewBindings.findChildViewById(rootView, id);
      if (binBtn == null) {
        break missingId;
      }

      id = R.id.colour_circle;
      MaterialCardView colourCircle = ViewBindings.findChildViewById(rootView, id);
      if (colourCircle == null) {
        break missingId;
      }

      id = R.id.colour_label;
      TextView colourLabel = ViewBindings.findChildViewById(rootView, id);
      if (colourLabel == null) {
        break missingId;
      }

      id = R.id.decrement_btn;
      RelativeLayout decrementBtn = ViewBindings.findChildViewById(rootView, id);
      if (decrementBtn == null) {
        break missingId;
      }

      id = R.id.heart_btn;
      RelativeLayout heartBtn = ViewBindings.findChildViewById(rootView, id);
      if (heartBtn == null) {
        break missingId;
      }

      id = R.id.heart_icon;
      ImageView heartIcon = ViewBindings.findChildViewById(rootView, id);
      if (heartIcon == null) {
        break missingId;
      }

      id = R.id.increment_btn;
      RelativeLayout incrementBtn = ViewBindings.findChildViewById(rootView, id);
      if (incrementBtn == null) {
        break missingId;
      }

      LinearLayout itemClickable = (LinearLayout) rootView;

      id = R.id.item_img;
      ImageView itemImg = ViewBindings.findChildViewById(rootView, id);
      if (itemImg == null) {
        break missingId;
      }

      id = R.id.price;
      TextView price = ViewBindings.findChildViewById(rootView, id);
      if (price == null) {
        break missingId;
      }

      id = R.id.quantity_control;
      LinearLayout quantityControl = ViewBindings.findChildViewById(rootView, id);
      if (quantityControl == null) {
        break missingId;
      }

      id = R.id.quantity_label;
      TextView quantityLabel = ViewBindings.findChildViewById(rootView, id);
      if (quantityLabel == null) {
        break missingId;
      }

      id = R.id.quantity_text;
      TextView quantityText = ViewBindings.findChildViewById(rootView, id);
      if (quantityText == null) {
        break missingId;
      }

      id = R.id.ram_tag;
      MaterialCardView ramTag = ViewBindings.findChildViewById(rootView, id);
      if (ramTag == null) {
        break missingId;
      }

      id = R.id.ram_text;
      TextView ramText = ViewBindings.findChildViewById(rootView, id);
      if (ramText == null) {
        break missingId;
      }

      id = R.id.ssd_tag;
      MaterialCardView ssdTag = ViewBindings.findChildViewById(rootView, id);
      if (ssdTag == null) {
        break missingId;
      }

      id = R.id.ssd_text;
      TextView ssdText = ViewBindings.findChildViewById(rootView, id);
      if (ssdText == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ItemListVariantBinding((LinearLayout) rootView, binBtn, colourCircle, colourLabel,
          decrementBtn, heartBtn, heartIcon, incrementBtn, itemClickable, itemImg, price,
          quantityControl, quantityLabel, quantityText, ramTag, ramText, ssdTag, ssdText, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
