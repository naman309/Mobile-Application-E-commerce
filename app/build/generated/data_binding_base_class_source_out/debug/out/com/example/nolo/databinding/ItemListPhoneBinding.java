// Generated by view binder compiler. Do not edit!
package com.example.nolo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nolo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListPhoneBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout itemClickable;

  @NonNull
  public final LinearLayout itemClickable2;

  @NonNull
  public final ImageView itemImg;

  @NonNull
  public final ImageView itemImg2;

  @NonNull
  public final TextView itemPrice;

  @NonNull
  public final TextView itemPrice2;

  @NonNull
  public final TextView itemTitle;

  @NonNull
  public final TextView itemTitle2;

  private ItemListPhoneBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout itemClickable,
      @NonNull LinearLayout itemClickable2, @NonNull ImageView itemImg, @NonNull ImageView itemImg2,
      @NonNull TextView itemPrice, @NonNull TextView itemPrice2, @NonNull TextView itemTitle,
      @NonNull TextView itemTitle2) {
    this.rootView = rootView;
    this.itemClickable = itemClickable;
    this.itemClickable2 = itemClickable2;
    this.itemImg = itemImg;
    this.itemImg2 = itemImg2;
    this.itemPrice = itemPrice;
    this.itemPrice2 = itemPrice2;
    this.itemTitle = itemTitle;
    this.itemTitle2 = itemTitle2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListPhoneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListPhoneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list_phone, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListPhoneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_clickable;
      LinearLayout itemClickable = ViewBindings.findChildViewById(rootView, id);
      if (itemClickable == null) {
        break missingId;
      }

      id = R.id.item_clickable2;
      LinearLayout itemClickable2 = ViewBindings.findChildViewById(rootView, id);
      if (itemClickable2 == null) {
        break missingId;
      }

      id = R.id.item_img;
      ImageView itemImg = ViewBindings.findChildViewById(rootView, id);
      if (itemImg == null) {
        break missingId;
      }

      id = R.id.item_img2;
      ImageView itemImg2 = ViewBindings.findChildViewById(rootView, id);
      if (itemImg2 == null) {
        break missingId;
      }

      id = R.id.item_price;
      TextView itemPrice = ViewBindings.findChildViewById(rootView, id);
      if (itemPrice == null) {
        break missingId;
      }

      id = R.id.item_price2;
      TextView itemPrice2 = ViewBindings.findChildViewById(rootView, id);
      if (itemPrice2 == null) {
        break missingId;
      }

      id = R.id.item_title;
      TextView itemTitle = ViewBindings.findChildViewById(rootView, id);
      if (itemTitle == null) {
        break missingId;
      }

      id = R.id.item_title2;
      TextView itemTitle2 = ViewBindings.findChildViewById(rootView, id);
      if (itemTitle2 == null) {
        break missingId;
      }

      return new ItemListPhoneBinding((LinearLayout) rootView, itemClickable, itemClickable2,
          itemImg, itemImg2, itemPrice, itemPrice2, itemTitle, itemTitle2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
