// Generated by view binder compiler. Do not edit!
package com.example.nolo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nolo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout browseBtn;

  @NonNull
  public final ListView categoryList;

  @NonNull
  public final RecyclerView featuredItemsList;

  @NonNull
  public final TextView featuredText;

  @NonNull
  public final FrameLayout homeFrag;

  @NonNull
  public final ImageView homeLogo;

  @NonNull
  public final ListView indicator;

  @NonNull
  public final LinearLayout initialHomeView;

  @NonNull
  public final LinearLayout outsideSearchContainer;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final LinearLayout searchLayoutBtn;

  @NonNull
  public final ItemSearchBarBinding searchView;

  private FragmentHomeBinding(@NonNull FrameLayout rootView, @NonNull LinearLayout browseBtn,
      @NonNull ListView categoryList, @NonNull RecyclerView featuredItemsList,
      @NonNull TextView featuredText, @NonNull FrameLayout homeFrag, @NonNull ImageView homeLogo,
      @NonNull ListView indicator, @NonNull LinearLayout initialHomeView,
      @NonNull LinearLayout outsideSearchContainer, @NonNull ScrollView scrollView,
      @NonNull LinearLayout searchLayoutBtn, @NonNull ItemSearchBarBinding searchView) {
    this.rootView = rootView;
    this.browseBtn = browseBtn;
    this.categoryList = categoryList;
    this.featuredItemsList = featuredItemsList;
    this.featuredText = featuredText;
    this.homeFrag = homeFrag;
    this.homeLogo = homeLogo;
    this.indicator = indicator;
    this.initialHomeView = initialHomeView;
    this.outsideSearchContainer = outsideSearchContainer;
    this.scrollView = scrollView;
    this.searchLayoutBtn = searchLayoutBtn;
    this.searchView = searchView;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.browse_btn;
      LinearLayout browseBtn = ViewBindings.findChildViewById(rootView, id);
      if (browseBtn == null) {
        break missingId;
      }

      id = R.id.category_list;
      ListView categoryList = ViewBindings.findChildViewById(rootView, id);
      if (categoryList == null) {
        break missingId;
      }

      id = R.id.featured_items_list;
      RecyclerView featuredItemsList = ViewBindings.findChildViewById(rootView, id);
      if (featuredItemsList == null) {
        break missingId;
      }

      id = R.id.featured_text;
      TextView featuredText = ViewBindings.findChildViewById(rootView, id);
      if (featuredText == null) {
        break missingId;
      }

      FrameLayout homeFrag = (FrameLayout) rootView;

      id = R.id.home_logo;
      ImageView homeLogo = ViewBindings.findChildViewById(rootView, id);
      if (homeLogo == null) {
        break missingId;
      }

      id = R.id.indicator;
      ListView indicator = ViewBindings.findChildViewById(rootView, id);
      if (indicator == null) {
        break missingId;
      }

      id = R.id.initial_home_view;
      LinearLayout initialHomeView = ViewBindings.findChildViewById(rootView, id);
      if (initialHomeView == null) {
        break missingId;
      }

      id = R.id.outside_search_container;
      LinearLayout outsideSearchContainer = ViewBindings.findChildViewById(rootView, id);
      if (outsideSearchContainer == null) {
        break missingId;
      }

      id = R.id.scroll_view;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.search_layout_btn;
      LinearLayout searchLayoutBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchLayoutBtn == null) {
        break missingId;
      }

      id = R.id.search_view;
      View searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }
      ItemSearchBarBinding binding_searchView = ItemSearchBarBinding.bind(searchView);

      return new FragmentHomeBinding((FrameLayout) rootView, browseBtn, categoryList,
          featuredItemsList, featuredText, homeFrag, homeLogo, indicator, initialHomeView,
          outsideSearchContainer, scrollView, searchLayoutBtn, binding_searchView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
