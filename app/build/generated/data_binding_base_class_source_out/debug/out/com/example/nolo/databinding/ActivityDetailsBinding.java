// Generated by view binder compiler. Do not edit!
package com.example.nolo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.example.nolo.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final MaterialButton addCartBtn;

  @NonNull
  public final ViewPager2 carousel;

  @NonNull
  public final RelativeLayout carouselContainer;

  @NonNull
  public final ImageView closeBtn;

  @NonNull
  public final TextView colourTitle;

  @NonNull
  public final RecyclerView coloursList;

  @NonNull
  public final RelativeLayout decrementBtn;

  @NonNull
  public final LinearLayout detailsContainer;

  @NonNull
  public final TabLayout dots;

  @NonNull
  public final ImageView heartFilledBtn;

  @NonNull
  public final ImageView heartHollowBtn;

  @NonNull
  public final RelativeLayout incrementBtn;

  @NonNull
  public final TextView itemTitle;

  @NonNull
  public final TextView priceText;

  @NonNull
  public final TextView quantityText;

  @NonNull
  public final LinearLayout ramContainer;

  @NonNull
  public final RecyclerView ramList;

  @NonNull
  public final LinearLayout recContainer;

  @NonNull
  public final RecyclerView recItemsList;

  @NonNull
  public final ScrollView scrollContainer;

  @NonNull
  public final LinearLayout specs;

  @NonNull
  public final ListView specsList;

  @NonNull
  public final LinearLayout storageContainer;

  @NonNull
  public final RecyclerView storageList;

  @NonNull
  public final ImageView storeBtn;

  @NonNull
  public final TextView storeName;

  @NonNull
  public final TextView summaryText;

  @NonNull
  public final HorizontalScrollView transparentContainer;

  private ActivityDetailsBinding(@NonNull FrameLayout rootView, @NonNull MaterialButton addCartBtn,
      @NonNull ViewPager2 carousel, @NonNull RelativeLayout carouselContainer,
      @NonNull ImageView closeBtn, @NonNull TextView colourTitle, @NonNull RecyclerView coloursList,
      @NonNull RelativeLayout decrementBtn, @NonNull LinearLayout detailsContainer,
      @NonNull TabLayout dots, @NonNull ImageView heartFilledBtn, @NonNull ImageView heartHollowBtn,
      @NonNull RelativeLayout incrementBtn, @NonNull TextView itemTitle,
      @NonNull TextView priceText, @NonNull TextView quantityText,
      @NonNull LinearLayout ramContainer, @NonNull RecyclerView ramList,
      @NonNull LinearLayout recContainer, @NonNull RecyclerView recItemsList,
      @NonNull ScrollView scrollContainer, @NonNull LinearLayout specs, @NonNull ListView specsList,
      @NonNull LinearLayout storageContainer, @NonNull RecyclerView storageList,
      @NonNull ImageView storeBtn, @NonNull TextView storeName, @NonNull TextView summaryText,
      @NonNull HorizontalScrollView transparentContainer) {
    this.rootView = rootView;
    this.addCartBtn = addCartBtn;
    this.carousel = carousel;
    this.carouselContainer = carouselContainer;
    this.closeBtn = closeBtn;
    this.colourTitle = colourTitle;
    this.coloursList = coloursList;
    this.decrementBtn = decrementBtn;
    this.detailsContainer = detailsContainer;
    this.dots = dots;
    this.heartFilledBtn = heartFilledBtn;
    this.heartHollowBtn = heartHollowBtn;
    this.incrementBtn = incrementBtn;
    this.itemTitle = itemTitle;
    this.priceText = priceText;
    this.quantityText = quantityText;
    this.ramContainer = ramContainer;
    this.ramList = ramList;
    this.recContainer = recContainer;
    this.recItemsList = recItemsList;
    this.scrollContainer = scrollContainer;
    this.specs = specs;
    this.specsList = specsList;
    this.storageContainer = storageContainer;
    this.storageList = storageList;
    this.storeBtn = storeBtn;
    this.storeName = storeName;
    this.summaryText = summaryText;
    this.transparentContainer = transparentContainer;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_cart_btn;
      MaterialButton addCartBtn = ViewBindings.findChildViewById(rootView, id);
      if (addCartBtn == null) {
        break missingId;
      }

      id = R.id.carousel;
      ViewPager2 carousel = ViewBindings.findChildViewById(rootView, id);
      if (carousel == null) {
        break missingId;
      }

      id = R.id.carousel_container;
      RelativeLayout carouselContainer = ViewBindings.findChildViewById(rootView, id);
      if (carouselContainer == null) {
        break missingId;
      }

      id = R.id.close_btn;
      ImageView closeBtn = ViewBindings.findChildViewById(rootView, id);
      if (closeBtn == null) {
        break missingId;
      }

      id = R.id.colour_title;
      TextView colourTitle = ViewBindings.findChildViewById(rootView, id);
      if (colourTitle == null) {
        break missingId;
      }

      id = R.id.colours_list;
      RecyclerView coloursList = ViewBindings.findChildViewById(rootView, id);
      if (coloursList == null) {
        break missingId;
      }

      id = R.id.decrement_btn;
      RelativeLayout decrementBtn = ViewBindings.findChildViewById(rootView, id);
      if (decrementBtn == null) {
        break missingId;
      }

      id = R.id.details_container;
      LinearLayout detailsContainer = ViewBindings.findChildViewById(rootView, id);
      if (detailsContainer == null) {
        break missingId;
      }

      id = R.id.dots;
      TabLayout dots = ViewBindings.findChildViewById(rootView, id);
      if (dots == null) {
        break missingId;
      }

      id = R.id.heart_filled_btn;
      ImageView heartFilledBtn = ViewBindings.findChildViewById(rootView, id);
      if (heartFilledBtn == null) {
        break missingId;
      }

      id = R.id.heart_hollow_btn;
      ImageView heartHollowBtn = ViewBindings.findChildViewById(rootView, id);
      if (heartHollowBtn == null) {
        break missingId;
      }

      id = R.id.increment_btn;
      RelativeLayout incrementBtn = ViewBindings.findChildViewById(rootView, id);
      if (incrementBtn == null) {
        break missingId;
      }

      id = R.id.item_title;
      TextView itemTitle = ViewBindings.findChildViewById(rootView, id);
      if (itemTitle == null) {
        break missingId;
      }

      id = R.id.price_text;
      TextView priceText = ViewBindings.findChildViewById(rootView, id);
      if (priceText == null) {
        break missingId;
      }

      id = R.id.quantity_text;
      TextView quantityText = ViewBindings.findChildViewById(rootView, id);
      if (quantityText == null) {
        break missingId;
      }

      id = R.id.ram_container;
      LinearLayout ramContainer = ViewBindings.findChildViewById(rootView, id);
      if (ramContainer == null) {
        break missingId;
      }

      id = R.id.ram_list;
      RecyclerView ramList = ViewBindings.findChildViewById(rootView, id);
      if (ramList == null) {
        break missingId;
      }

      id = R.id.rec_container;
      LinearLayout recContainer = ViewBindings.findChildViewById(rootView, id);
      if (recContainer == null) {
        break missingId;
      }

      id = R.id.rec_items_list;
      RecyclerView recItemsList = ViewBindings.findChildViewById(rootView, id);
      if (recItemsList == null) {
        break missingId;
      }

      id = R.id.scrollContainer;
      ScrollView scrollContainer = ViewBindings.findChildViewById(rootView, id);
      if (scrollContainer == null) {
        break missingId;
      }

      id = R.id.specs;
      LinearLayout specs = ViewBindings.findChildViewById(rootView, id);
      if (specs == null) {
        break missingId;
      }

      id = R.id.specs_list;
      ListView specsList = ViewBindings.findChildViewById(rootView, id);
      if (specsList == null) {
        break missingId;
      }

      id = R.id.storage_container;
      LinearLayout storageContainer = ViewBindings.findChildViewById(rootView, id);
      if (storageContainer == null) {
        break missingId;
      }

      id = R.id.storage_list;
      RecyclerView storageList = ViewBindings.findChildViewById(rootView, id);
      if (storageList == null) {
        break missingId;
      }

      id = R.id.store_btn;
      ImageView storeBtn = ViewBindings.findChildViewById(rootView, id);
      if (storeBtn == null) {
        break missingId;
      }

      id = R.id.store_name;
      TextView storeName = ViewBindings.findChildViewById(rootView, id);
      if (storeName == null) {
        break missingId;
      }

      id = R.id.summary_text;
      TextView summaryText = ViewBindings.findChildViewById(rootView, id);
      if (summaryText == null) {
        break missingId;
      }

      id = R.id.transparent_container;
      HorizontalScrollView transparentContainer = ViewBindings.findChildViewById(rootView, id);
      if (transparentContainer == null) {
        break missingId;
      }

      return new ActivityDetailsBinding((FrameLayout) rootView, addCartBtn, carousel,
          carouselContainer, closeBtn, colourTitle, coloursList, decrementBtn, detailsContainer,
          dots, heartFilledBtn, heartHollowBtn, incrementBtn, itemTitle, priceText, quantityText,
          ramContainer, ramList, recContainer, recItemsList, scrollContainer, specs, specsList,
          storageContainer, storageList, storeBtn, storeName, summaryText, transparentContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
