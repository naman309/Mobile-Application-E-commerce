// Generated by view binder compiler. Do not edit!
package com.example.nolo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nolo.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignupBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox checkbox;

  @NonNull
  public final RelativeLayout checkboxBtn;

  @NonNull
  public final EditText emailEdit;

  @NonNull
  public final TextInputLayout emailLayout;

  @NonNull
  public final TextView errorTextView;

  @NonNull
  public final RelativeLayout eyeBtn;

  @NonNull
  public final ImageView eyeIcon;

  @NonNull
  public final RelativeLayout loginBtn;

  @NonNull
  public final TextView loginText;

  @NonNull
  public final EditText passwordEdit;

  @NonNull
  public final TextInputLayout passwordLayout;

  @NonNull
  public final RelativeLayout privacyBtn;

  @NonNull
  public final TextView privacyTextView;

  @NonNull
  public final RelativeLayout repeatEyeBtn;

  @NonNull
  public final ImageView repeatEyeIcon;

  @NonNull
  public final EditText repeatPasswordEdit;

  @NonNull
  public final TextInputLayout repeatPasswordLayout;

  @NonNull
  public final MaterialButton signupButton;

  @NonNull
  public final RelativeLayout termsBtn;

  @NonNull
  public final TextView termsTextView;

  private ActivitySignupBinding(@NonNull LinearLayout rootView, @NonNull CheckBox checkbox,
      @NonNull RelativeLayout checkboxBtn, @NonNull EditText emailEdit,
      @NonNull TextInputLayout emailLayout, @NonNull TextView errorTextView,
      @NonNull RelativeLayout eyeBtn, @NonNull ImageView eyeIcon, @NonNull RelativeLayout loginBtn,
      @NonNull TextView loginText, @NonNull EditText passwordEdit,
      @NonNull TextInputLayout passwordLayout, @NonNull RelativeLayout privacyBtn,
      @NonNull TextView privacyTextView, @NonNull RelativeLayout repeatEyeBtn,
      @NonNull ImageView repeatEyeIcon, @NonNull EditText repeatPasswordEdit,
      @NonNull TextInputLayout repeatPasswordLayout, @NonNull MaterialButton signupButton,
      @NonNull RelativeLayout termsBtn, @NonNull TextView termsTextView) {
    this.rootView = rootView;
    this.checkbox = checkbox;
    this.checkboxBtn = checkboxBtn;
    this.emailEdit = emailEdit;
    this.emailLayout = emailLayout;
    this.errorTextView = errorTextView;
    this.eyeBtn = eyeBtn;
    this.eyeIcon = eyeIcon;
    this.loginBtn = loginBtn;
    this.loginText = loginText;
    this.passwordEdit = passwordEdit;
    this.passwordLayout = passwordLayout;
    this.privacyBtn = privacyBtn;
    this.privacyTextView = privacyTextView;
    this.repeatEyeBtn = repeatEyeBtn;
    this.repeatEyeIcon = repeatEyeIcon;
    this.repeatPasswordEdit = repeatPasswordEdit;
    this.repeatPasswordLayout = repeatPasswordLayout;
    this.signupButton = signupButton;
    this.termsBtn = termsBtn;
    this.termsTextView = termsTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkbox;
      CheckBox checkbox = ViewBindings.findChildViewById(rootView, id);
      if (checkbox == null) {
        break missingId;
      }

      id = R.id.checkbox_btn;
      RelativeLayout checkboxBtn = ViewBindings.findChildViewById(rootView, id);
      if (checkboxBtn == null) {
        break missingId;
      }

      id = R.id.email_edit;
      EditText emailEdit = ViewBindings.findChildViewById(rootView, id);
      if (emailEdit == null) {
        break missingId;
      }

      id = R.id.email_layout;
      TextInputLayout emailLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailLayout == null) {
        break missingId;
      }

      id = R.id.error_text_view;
      TextView errorTextView = ViewBindings.findChildViewById(rootView, id);
      if (errorTextView == null) {
        break missingId;
      }

      id = R.id.eye_btn;
      RelativeLayout eyeBtn = ViewBindings.findChildViewById(rootView, id);
      if (eyeBtn == null) {
        break missingId;
      }

      id = R.id.eye_icon;
      ImageView eyeIcon = ViewBindings.findChildViewById(rootView, id);
      if (eyeIcon == null) {
        break missingId;
      }

      id = R.id.login_btn;
      RelativeLayout loginBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginBtn == null) {
        break missingId;
      }

      id = R.id.login_text;
      TextView loginText = ViewBindings.findChildViewById(rootView, id);
      if (loginText == null) {
        break missingId;
      }

      id = R.id.password_edit;
      EditText passwordEdit = ViewBindings.findChildViewById(rootView, id);
      if (passwordEdit == null) {
        break missingId;
      }

      id = R.id.password_layout;
      TextInputLayout passwordLayout = ViewBindings.findChildViewById(rootView, id);
      if (passwordLayout == null) {
        break missingId;
      }

      id = R.id.privacy_btn;
      RelativeLayout privacyBtn = ViewBindings.findChildViewById(rootView, id);
      if (privacyBtn == null) {
        break missingId;
      }

      id = R.id.privacy_text_view;
      TextView privacyTextView = ViewBindings.findChildViewById(rootView, id);
      if (privacyTextView == null) {
        break missingId;
      }

      id = R.id.repeat_eye_btn;
      RelativeLayout repeatEyeBtn = ViewBindings.findChildViewById(rootView, id);
      if (repeatEyeBtn == null) {
        break missingId;
      }

      id = R.id.repeat_eye_icon;
      ImageView repeatEyeIcon = ViewBindings.findChildViewById(rootView, id);
      if (repeatEyeIcon == null) {
        break missingId;
      }

      id = R.id.repeat_password_edit;
      EditText repeatPasswordEdit = ViewBindings.findChildViewById(rootView, id);
      if (repeatPasswordEdit == null) {
        break missingId;
      }

      id = R.id.repeat_password_layout;
      TextInputLayout repeatPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (repeatPasswordLayout == null) {
        break missingId;
      }

      id = R.id.signup_button;
      MaterialButton signupButton = ViewBindings.findChildViewById(rootView, id);
      if (signupButton == null) {
        break missingId;
      }

      id = R.id.terms_btn;
      RelativeLayout termsBtn = ViewBindings.findChildViewById(rootView, id);
      if (termsBtn == null) {
        break missingId;
      }

      id = R.id.terms_text_view;
      TextView termsTextView = ViewBindings.findChildViewById(rootView, id);
      if (termsTextView == null) {
        break missingId;
      }

      return new ActivitySignupBinding((LinearLayout) rootView, checkbox, checkboxBtn, emailEdit,
          emailLayout, errorTextView, eyeBtn, eyeIcon, loginBtn, loginText, passwordEdit,
          passwordLayout, privacyBtn, privacyTextView, repeatEyeBtn, repeatEyeIcon,
          repeatPasswordEdit, repeatPasswordLayout, signupButton, termsBtn, termsTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
