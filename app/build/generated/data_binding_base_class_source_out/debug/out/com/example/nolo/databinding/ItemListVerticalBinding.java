// Generated by view binder compiler. Do not edit!
package com.example.nolo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nolo.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListVerticalBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout itemClickable;

  @NonNull
  public final ImageView itemImg;

  @NonNull
  public final MaterialCardView laptopsTag;

  @NonNull
  public final MaterialCardView phonesTag;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView title;

  private ItemListVerticalBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout itemClickable, @NonNull ImageView itemImg,
      @NonNull MaterialCardView laptopsTag, @NonNull MaterialCardView phonesTag,
      @NonNull TextView price, @NonNull TextView title) {
    this.rootView = rootView;
    this.itemClickable = itemClickable;
    this.itemImg = itemImg;
    this.laptopsTag = laptopsTag;
    this.phonesTag = phonesTag;
    this.price = price;
    this.title = title;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListVerticalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListVerticalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list_vertical, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListVerticalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout itemClickable = (LinearLayout) rootView;

      id = R.id.item_img;
      ImageView itemImg = ViewBindings.findChildViewById(rootView, id);
      if (itemImg == null) {
        break missingId;
      }

      id = R.id.laptops_tag;
      MaterialCardView laptopsTag = ViewBindings.findChildViewById(rootView, id);
      if (laptopsTag == null) {
        break missingId;
      }

      id = R.id.phones_tag;
      MaterialCardView phonesTag = ViewBindings.findChildViewById(rootView, id);
      if (phonesTag == null) {
        break missingId;
      }

      id = R.id.price;
      TextView price = ViewBindings.findChildViewById(rootView, id);
      if (price == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ItemListVerticalBinding((LinearLayout) rootView, itemClickable, itemImg,
          laptopsTag, phonesTag, price, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
