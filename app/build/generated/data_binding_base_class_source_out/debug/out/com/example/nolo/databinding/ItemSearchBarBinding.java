// Generated by view binder compiler. Do not edit!
package com.example.nolo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nolo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSearchBarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout deleteBtn;

  @NonNull
  public final ImageView deleteImageBtn;

  @NonNull
  public final RelativeLayout searchBtn;

  @NonNull
  public final EditText searchEdittext;

  @NonNull
  public final ImageView searchImageBtn;

  @NonNull
  public final ListView searchSuggestionsList;

  private ItemSearchBarBinding(@NonNull LinearLayout rootView, @NonNull RelativeLayout deleteBtn,
      @NonNull ImageView deleteImageBtn, @NonNull RelativeLayout searchBtn,
      @NonNull EditText searchEdittext, @NonNull ImageView searchImageBtn,
      @NonNull ListView searchSuggestionsList) {
    this.rootView = rootView;
    this.deleteBtn = deleteBtn;
    this.deleteImageBtn = deleteImageBtn;
    this.searchBtn = searchBtn;
    this.searchEdittext = searchEdittext;
    this.searchImageBtn = searchImageBtn;
    this.searchSuggestionsList = searchSuggestionsList;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSearchBarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSearchBarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_search_bar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSearchBarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delete_btn;
      RelativeLayout deleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtn == null) {
        break missingId;
      }

      id = R.id.delete_image_btn;
      ImageView deleteImageBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteImageBtn == null) {
        break missingId;
      }

      id = R.id.search_btn;
      RelativeLayout searchBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchBtn == null) {
        break missingId;
      }

      id = R.id.search_edittext;
      EditText searchEdittext = ViewBindings.findChildViewById(rootView, id);
      if (searchEdittext == null) {
        break missingId;
      }

      id = R.id.search_image_btn;
      ImageView searchImageBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchImageBtn == null) {
        break missingId;
      }

      id = R.id.search_suggestions_list;
      ListView searchSuggestionsList = ViewBindings.findChildViewById(rootView, id);
      if (searchSuggestionsList == null) {
        break missingId;
      }

      return new ItemSearchBarBinding((LinearLayout) rootView, deleteBtn, deleteImageBtn, searchBtn,
          searchEdittext, searchImageBtn, searchSuggestionsList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
